<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.elnarion.sample</groupId>
	<artifactId>sample.asciidoc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<asciidoctor.maven.plugin.version>2.2.3</asciidoctor.maven.plugin.version>
		<asciidoctorj.version>2.5.8</asciidoctorj.version>
		<asciidoclet.version>2.0.4</asciidoclet.version>
		<jruby.version>9.4.3.0</jruby.version>
		<asciidoctorj.diagram.version>2.2.8</asciidoctorj.diagram.version>
		<docconverter.version>1.0.2</docconverter.version>
		<plantumlgenerator.version>1.6.0</plantumlgenerator.version>
		<asciidoc-extensions.version>1.0.2</asciidoc-extensions.version>
		<remoteplantuml>http://www.plantuml.com/plantuml/png/</remoteplantuml>
	</properties>
	<modules>
		<module>project1</module>
		<module>project2</module>
		<module>project3</module>
		<module>project4</module>
	</modules>
	<profiles>
		<profile>
			<id>asciidoc-generate</id>
			<activation>
				<file>
					<exists>${basedir}/.mvn/active-profiles/asciidoc-generate</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
						<dependencies>
							<!-- Comment this section to use the default jruby artifact provided 
								by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby</artifactId>
								<version>${jruby.version}</version>
							</dependency>
							<!-- Comment this section to use the default AsciidoctorJ artifact 
								provided by the plugin -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>${asciidoctorj.version}</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram</artifactId>
								<version>${asciidoctorj.diagram.version}</version>
							</dependency>
							<dependency>
								<groupId>de.elnarion.asciidoc</groupId>
								<artifactId>asciidoc-extension-multiinclude</artifactId>
								<version>${asciidoc-extensions.version}</version>
							</dependency>
							<dependency>
								<groupId>de.elnarion.asciidoc</groupId>
								<artifactId>asciidoc-extension-remoteplantuml</artifactId>
								<version>${asciidoc-extensions.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<sourceDirectory>src/main/asciidoc</sourceDirectory>
							<outputDirectory>target/docs/asciidoc</outputDirectory>
							<requires>
								<require>asciidoctor-diagram</require>
							</requires>
							<attributes>
								<remote_plantuml_url>${remoteplantuml}</remote_plantuml_url>
							</attributes>
						</configuration>
						<executions>
							<execution>
								<id>asciidoc-to-html</id>
								<phase>process-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>xhtml5</backend>
									<attributes>
										<source-highlighter>coderay</source-highlighter>
										<sectnums>true</sectnums>
										<linkcss>false</linkcss>
										<imagesdir>./images</imagesdir>
										<toc>left</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>docconverter-maven-plugin</artifactId>
						<groupId>de.elnarion.maven</groupId>
						<version>${docconverter.version}</version>
						<executions>
							<execution>
								<id>html2pdf</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>convert</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/docs/pdf</outputDirectory>
									<sourceDirectory>${basedir}/target/docs/asciidoc</sourceDirectory>
									<sourceMimeType>application/xhtml+xml</sourceMimeType>
									<targetMimeType>application/pdf</targetMimeType>
									<outputFileending>pdf</outputFileending>
									<sourceDocumentExtensions>html</sourceDocumentExtensions>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>de.elnarion.util</groupId>
								<artifactId>docconverter-html2pdf</artifactId>
								<version>${docconverter.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>asciidoc-packaging</id>
			<activation>
				<file>
					<exists>${basedir}/.mvn/active-profiles/asciidoc-packaging</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>docconverter-maven-plugin</artifactId>
						<groupId>de.elnarion.maven</groupId>
						<version>${docconverter.version}</version>
						<executions>
							<execution>
								<id>adoc2adoc</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>convert</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/adoc</outputDirectory>
									<sourceDirectory>${basedir}/src/main/asciidoc</sourceDirectory>
									<sourceMimeType>text/x.asciidoc</sourceMimeType>
									<targetMimeType>text/x.asciidoc</targetMimeType>
									<outputFileending>adoc</outputFileending>
									<sourceDocumentExtensions>adoc</sourceDocumentExtensions>
									<conversionParameters>
										<adoc2adoc.remain_include_statement_regexp>.*include\:\:\.\/.*\[\].*</adoc2adoc.remain_include_statement_regexp>
									</conversionParameters>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>de.elnarion.util</groupId>
								<artifactId>docconverter-adoc2adoc</artifactId>
								<version>${docconverter.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>3.3.0</version>
						<executions>
							<execution>
								<id>asciidoc-jar</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<classifier>asciidoc</classifier>
									<classesDirectory>
										${basedir}/target/adoc
									</classesDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>asciidoc-unpackage</id>
			<activation>
				<file>
					<exists>${basedir}/.mvn/active-profiles/asciidoc-unpackage</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.5.0</version>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<includeClassifiers>asciidoc</includeClassifiers>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>javadoc-from-asciidoc</id>
			<activation>
				<file>
					<exists>${basedir}/.mvn/active-profiles/javadoc-from-asciidoc</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.5.0</version>
						<configuration>
							<source>1.8</source>
							<doclet>org.asciidoctor.Asciidoclet</doclet>
							<docletArtifacts>
								<docletArtifact>
									<groupId>de.elnarion.asciidoc</groupId>
									<artifactId>asciidoclet</artifactId>
									<version>${asciidoclet.version}</version>
								</docletArtifact>
								<docletArtifact>
									<groupId>com.google.guava</groupId>
									<artifactId>guava</artifactId>
									<version>31.1-jre</version>
								</docletArtifact>
								<docletArtifact>
									<groupId>com.google.guava</groupId>
									<artifactId>guava</artifactId>
									<version>31.1-jre</version>
								</docletArtifact>
								<docletArtifact>
									<groupId>org.asciidoctor</groupId>
									<artifactId>asciidoctorj</artifactId>
									<version>2.5.8</version>
								</docletArtifact>
								<docletArtifact>
									<groupId>org.asciidoctor</groupId>
									<artifactId>asciidoctorj-api</artifactId>
									<version>2.5.10</version>
								</docletArtifact>
								<docletArtifact>
									<groupId>org.jruby</groupId>
									<artifactId>jruby-complete</artifactId>
									<version>9.4.3.0</version>
								</docletArtifact>
							</docletArtifacts>
							<additionalDependencies>
								<dependency>
									<groupId>de.elnarion.asciidoc</groupId>
									<artifactId>asciidoc-extension-multiinclude</artifactId>
									<version>${asciidoc-extensions.version}</version>
								</dependency>
								<dependency>
									<groupId>de.elnarion.asciidoc</groupId>
									<artifactId>asciidoc-extension-remoteplantuml</artifactId>
									<version>${asciidoc-extensions.version}</version>
								</dependency>
							</additionalDependencies>
							<additionalOptions>
								<additionalOption>--base-dir ${project.basedir}</additionalOption>
								<additionalOption>--attribute "project_name=${project.name}"</additionalOption>
								<additionalOption>--attribute "project_version=${project.version}"</additionalOption>
								<additionalOption>--attribute "project_desc=${project.description}"</additionalOption>
								<additionalOption>--attribute "remote_plantuml_url=${remoteplantuml}"</additionalOption>
							</additionalOptions>
							<overview>src/main/java/overview.adoc</overview>
						</configuration>
						<!-- Exports javadocs containing AsciiDoc to HTML -->
						<executions>
							<!-- Exports javadocs containing AsciiDoc to AsciiDoc files -->
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
							<execution>
								<id>asciidoc</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>javadoc</goal>
								</goals>
								<configuration combine.self="override">
									<doclet>org.uniknow.asciidoc.ExportDoclet</doclet>
									<docletArtifact>
										<groupId>org.uniknow.asciidoc</groupId>
										<artifactId>exportdoclet</artifactId>
										<version>0.1.14</version>
									</docletArtifact>
									<useStandardDocletOptions>true</useStandardDocletOptions>
									<destDir>javadoc</destDir>
									<reportOutputDirectory>${basedir}/target/adoc</reportOutputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-toolchains-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<toolchains>
						<!-- this project needs a JDK toolchain, version 15 -->
						<jdk>
							<version>8</version>
						</jdk>
					</toolchains>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>toolchain</goal>
						</goals>
						<!-- the toolchain goal binds to the validate phase automatically -->
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>